var app=angular.module("Anime",["ui.router"]);app.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("/",{url:"/",templateUrl:"views/home.ejs",controller:"mainCtrl"}).state("login",{url:"/login",templateUrl:"views/login.ejs",controller:"mainCtrl"}).state("login2",{url:"/loginerror",templateUrl:"views/login2.ejs",controller:"mainCtrl"}).state("register",{url:"/register",templateUrl:"views/register.ejs",controller:"registerCtrl"}).state("anime",{url:"/anime/{animename}",templateUrl:"views/anime.ejs",controller:"animeCtrl"}).state("animegenre",{url:"/animegenre",templateUrl:"views/animeGenre.ejs",controller:"genreCtrl"})}]),app.controller("animeCtrl",function($scope,$state,$http){console.log($state.params.animename),$http.get("http://localhost:4000/animesearch/"+$state.params.animename).success(function(anime){console.log(anime),$scope.anime=anime}),$scope.genres=function(){console.log("es"),$http.get("http://localhost:4000/genres").success(function(episodes){console.log(episodes)})}}),app.controller("autoCtrl",function($scope,$state,$http,$rootScope,$location){$(document).ready(function(){console.log("yes");var availableTags=[];$http.get("http://localhost:4000/anime").success(function(anime){anime.forEach(function(e){void 0!==e.title&&availableTags.push(e.title)})}),$("#tags").autocomplete({minLength:2,source:availableTags,select:function(event,ui){$(this).val(ui.item.value),console.log("hi",$(this).val()),$scope.anime=$(this).val(),console.log($scope.anime)}}),$scope.searchAnime=function(){anime=document.getElementById("tags").value,$state.go("anime",{animename:anime})},$http.get("http://localhost:4000/user").success(function(user){user&&(console.log("user",user),$scope.currentUser=user.username)}),jQuery(function(){var max=4,checkboxes=$('input[type="checkbox"]');checkboxes.change(function(){var current=checkboxes.filter(":checked").length;checkboxes.filter(":not(:checked)").prop("disabled",current>=max)})}),$scope.hideGenre=!1,$scope.genres=function(genre){console.log("/animegenre"===$location.$$path),$rootScope.searchGenres=[],console.log("itworked");for(var key in genre)genre[key]===!0&&$rootScope.searchGenres.push(key);$("#myModal").foundation("reveal","close"),"/animegenre"!==$location.$$path?$state.go("animegenre"):$state.go($state.current,{},{reload:!0})}})}),app.controller("genreCtrl",function($scope,$state,$http,$rootScope){$scope.search=$rootScope.searchGenres,$http.post("http://localhost:4000/genres",$scope.search).success(function(anime){$scope.anime=anime,console.log(anime),$rootScope.searchGenres=[]})}),app.controller("mainCtrl",function($scope,$state,$http){$scope.results1=[];$http.get("http://localhost:4000/user").success(function(user){user&&(console.log("user",user),$scope.currentUser=user.username)}),$scope.register=function(newUser){$scope.newUser=newUser,$http.post("http://localhost:4000/register",$scope.newUser).success(function(err,data){return err.hasOwnProperty("name")===!0?void sweetAlert("Uh Oh  ",err.message,"error"):err.hasOwnProperty("errmsg")?(console.log(err),void sweetAlert("Uh Oh ",newUser.email+" is already registered","error")):($scope.user=$scope.newUser,void $state.go("/").then(function(){location.reload()}))})}}),app.controller("registerCtrl",function($scope,$state,$http){$scope.register=function(newUser){$scope.newUser=newUser,$http.post("http://localhost:4000/register",$scope.newUser).success(function(err,data){return err.hasOwnProperty("name")===!0?void sweetAlert("Uh Oh  ",err.message,"error"):err.hasOwnProperty("errmsg")?(console.log(err),void sweetAlert("Uh Oh ",newUser.email+" is already registered","error")):($scope.user=$scope.newUser,void $state.go("/").then(function(){location.reload()}))})}});